# Welcome to LibreSoC

> We're building a chip. A fast chip. A safe chip. A trusted chip.

> A chip with lots of peripherals. And a VPU.  And a 3D GPU...

> Oh and here, have the source code...

Sounds cool? Learn more about the [why](why_a_libresoc) behind LibreSOC and our [goals](About_Us).

# Our Team

We are proud of our talented and diverse [team](our_mandate).

# How Can I Help?

If you would like to fund us, see [[funding]]. We currently have some funding and always appreciate more!  If you are a Corporation or an individual you can donate tax-free to NLNet, and they can in turn gift our developers.  Contact lkcl@lkcl.net for more information.

If you want to write code with us, keep reading.

1. First, join the
[mailing list](http://lists.libre-riscv.org/mailman/listinfo/libre-riscv-dev),
introduce yourself, and read through
[recent posts](http://lists.libre-riscv.org/pipermail/libre-riscv-dev/)
and the [[charter]].

2. The next thing you should do is read through the [bugs
list](http://bugs.libre-riscv.org) and see if there are any bugs that
pique your interest.

3. After that, go ahead and take a look at the resources section below. 
Try and clone a repository with ``git clone https://git.libre-riscv.org/git/repositoryname.git``

4. If you plan to do HDL work, you should familiarize yourself with our [[HDL_workflow]].

5. We do have funding available (see [[nlnet]]) upon completion of issues -
we are also working on procuring more funding which gets the project to
nanometre scale tapeout.

6. After all this, if you feel that Libre-SoC is a good cause that
you would like to contribute to, add yourself to the [[current_members]]
page, fill in some information about yourself, and join the mailing list
and say hello.

Also note that you can edit this wiki. See the last section of this page.

## Needed Skills

Most labor is currently being applied to developing the GPU portion of
the Libre-SoC.

The highest priority needed at the moment is a c++ engineer to work on
a MESA 3D driver. This will begin life similar to SwiftShader however
retaining the vectorisation and predication intrinsics as well as hardware accelerated opcodes (all of which SwiftShader lacks)

Medium to long-term we need HDL engineers. Particularly those familiar
with nMigen or just python.  Most of the techniques being used require
software engineering skills (OO design, polymorphism) than they do more
traditional HDL programming skills. Basically if you have experience in 2
of the following you'll do fine: python, nmigen, verilog/VHDL/gate-level
design. See [[HDL_workflow]]

Also, individuals with experience in formal mathematical verification
are quite welcome.

TODO: add a list of upcoming project tasks/milestones (link to
bugtracker).

# Resources

| Resource | Link |
| --- | --- |
| Bugs and Tasks | <http://bugs.libre-riscv.org/> |
| Mailing Lists | <http://lists.libre-riscv.org> |
| Archives | <http://lists.libre-riscv.org/pipermail> |
| Git repositories | <http://git.libre-riscv.org> |
| Kazan (Vulkan driver) | <https://salsa.debian.org/Kazan-team/kazan> |
| Further Information | [[resources]] |

# Main Pages

* Libre-SoC [[charter]]
* [[shakti/m_class]]
* [[alt_rvp]]
* [[3d_gpu]]
* [[vpu]]
* [[simple_v_extension]]
* [[zfpacc_proposal]]
* [[ztrans_proposal]]
* [[simple_v_extension/specification/mv.x]]
* [[simple_v_extension/specification/ld.x]]
* Specifications and [[resources]]

# Spike Emulator
* [Set-Up Instructions][1]

[1]: https://libre-riscv.org/3d_gpu/spike_sv/

# Wiki Structure

This is a publicly editable wiki.

All wikis are supposed to have a [[SandBox]], so this one does too.

This wiki is powered by [[ikiwiki]].

This is the sitemap: [[sitemap]]
