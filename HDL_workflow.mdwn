# HDL workflow

This section describes the workflow for developing the LibreSoC.

# Hardware

RAM is the biggest requirement. Minimum 16GB, the more the better (32 or 64GB starts to reach "acceptable" levels.  Disk space is not hugely critical: 256GB SSD should be more than adequate.  Simulations however are where raw processing power is a must.  High end Graphics Cards are nonessential.

# Operating System

First install Debian (ubuntu if you absolutely must) for standardisation cross-team and so that toochain installation is greatly simplified.

A basic GUI desktop is necessary: fvwm2, xfce, lxde are perfectly sufficient (alongside wicd-gtk for network management). Other more complex desktops can be used however may consume greater resources.

# Software prerequisites

Whilst many resources online advocate sudo in front of all of the root-level commands below, this is extremely irritating. run "sudo bash", get a root prompt, and save some typing.

* apt-get install build-essential
* apt-get install git python3.7 python3.7-dev python-nosetest3
* apt-get install graphviz xdot
* return to user prompt (ctrl-d)

## yosys

Follow the source code (git clone) instructions here: <http://www.clifford.at/yosys/download.html>

Do not try to use a fixed revision, nmigen is evolving and frequently interacts with yosys

## symbiyosys

Follow the instructions here: <https://symbiyosys.readthedocs.io/en/latest/quickstart.html#installing>

You do not have to install all of those (avy, boolector can be left out if desired).

## nmigen

nmigen may be installed as follows:

* mkdir ~/src
* cd !$
* git clone https://github.com/m-labs/nmigen.git
* cd nmigen
* sudo bash
* python3 setup.py develop
* ctrl-d

testing can then be carried out with "python3 setp.py test"

# Registering for git repository access

After going through the onboarding process and having agreed to take responsibility for certain tasks, ask on the mailing list for git repository access, sending in a public key (id_rsa.pub). If you do not have one generate it with ssh-keygen -t rsa.

NEVER SEND ANYONE THE PRIVATE KEY.  By contrast the public key, on account of being public, is perfectly fine to make... err... public.

Create a file ~/.ssh/config with the following lines:

    Host git.libre-riscv.org
    Port 922

Wait for the Project Admin to confirm that the ssh key has been added to the required repositories.  Once confirmed,
you can clone any of the repos at http://git.libre-riscv.org:

    git clone gitolite3@git.libre-riscv.org:REPONAME.git

# Development Rules

* plan in advance to write not just code but a full test suite for that code.  **this is not optional**. large python projects that do not have unit tests **fail**.
* edit files making minimal *single purpose* modifications.
* prior to committing make sure that relevant unit tests pass, or that the change is a zero-impact addition.
* commit no more than 5 to 10 lines at a time, with a CLEAR message (no "added this" or "changed that"). if the commit involves a list of changes or the word "and" it is a "red flag" that the commit has not been properly broken down.
* if it is essential to commit large amounts of code, ensure that it is **not** in use **anywhere** by any other code.

the reason for the above is because python is a weakly typed language.  make one tiny change at the base level of the class hierarchy and the effect may be disastrous.

* all code needs to conform to pep8.
