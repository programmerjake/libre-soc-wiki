| base+4 ... base+2          | base             | number of bits             |
| ------ -----------------   | ---------------- | -------------------------- |
| ..xxxx  xxxxxxxxxxxxxxxx   | xnnnxxxxx1111111 | (80+16\*nnn)-bit, nnn!=111 |
| {ops}{Pred}{Reg}{VL Block} | VBLOCK Prefix    |                            |

A suitable prefix, which fits the Expanded Instruction-Length encoding
for "(80 + 16 times instruction-length)", as defined in Section 1.5
of the RISC-V ISA, is as follows:

| 15    | 14:12 | 11:10 | 9     | 8     | 7    | 6:0     |
| -     | ----- | ----- | ----- | ----  | ---  | ------- |
| vlset | 16xil | rplen | pplen | pmode | rmode | 1111111 |

The VL/MAXVL/SubVL Block format:

[[!table  data="""
31:30 | 29:28 | 27:22    | 21 | 20:19   | 18:16    | comment                              |
0b00  | SubVL | imm[5:0] |rsvd| 00000             || VL = MIN(MVL, imm)                   |
0b00  | SubVL | imm[5:0] |rsvd| rd[4:0]           || rf[rd] = VL = MIN(MVL, imm)          |
0b01  | SubVL | imm[5:0] | rs1[2:0]    || rd[2:0]  | RVC reg format, sv.setvl rd, rs, imm |
0b10  | SubVL | imm[5:0] |rsvd| 00000             || VL = MVL imm                         |
0b10  | SubVL | imm[5:0] |rsvd|   rd[4:0]         || rf[rd] = VL = MVL imm                |
0b11  | rsvd  | rsvd     |rsvd| rsvd              || reserved, all 0s                     |
"""]]

