## Project name

LIP6 VLSI Tools

## Website / wiki 

<https://libre-soc.org/nlnet_2021_lip6_vlsi>

Please be short and to the point in your answers; focus primarily on
the what and how, not so much on the why. Add longer descriptions as
attachments (see below). If English isn't your first language, don't
worry - our reviewers don't care about spelling errors, only about
great ideas. We apologise for the inconvenience of having to submit in
English. On the up side, you can be as technical as you need to be (but
you don't have to). Do stay concrete. Use plain text in your reply only,
if you need any HTML to make your point please include this as attachment.

## Abstract: Can you explain the whole project and its expected outcome(s).

LIP6's VLSI tools are one of the few user-operated toolchains for creating
ASIC layouts where the full source code is available for inspection.
This means that there is no opportunity for insertion of rogue hardware
into an ASIC made by LIP6 tools which could compromise user trust, either locally or for
internet use. Further: academic, public and free discussion are all
engendered and fostered where at present NDAs rife through the VLSI
Industry prevent and prohibit discussion and general improvements beneficial
to users.

The expected outcome is to improve Coriolis2, HITAS/YAGLE and extend the
whole toolchain so that it is faster, able to handle larger ASIC designs,
and can perform Logical Validation. Also to be improved and tested is
support for lower geometries (starting with 130nm)

# Have you been involved with projects or organisations relevant to this project before? And if so, can you tell us a bit about your contributions?

LIP6 has created the ASIC Layout for the Libre-SOC 180nm ASIC that went to
IMEC TSMC MPW in June 2021.  It was developed entirely with Libre source code
from HDL to GDS-II, the only NDA being the TSMC PDK.


# Requested Amount    

EUR $50,000.

# Explain what the requested budget will be used for? 

To improve the speed of the GUI front-end, to make it possible to
handle larger ASIC designs, to add LVS capability, improve the internal
data format (to better handle mixed case module and signal names), integrate
the Static Timing Analysis tool (HITAS) and YAGLE gate-level extraction tool, to complete the conversion
to python 3,
to try smaller geometry ASICs (beginning with 130nm), and potentially
investigate using multi-processing to speed up completion.

# Does the project have other funding sources, both past and present?

LIP6 is part of Sorbonne University.  The developers and maintainers
of Coriolis2, HITAS/TAGLE, and Alliance, are all employed by Sorbonne
University. For the Libre-SOC 180nm ASIC development an NLnet Grant
was received, most of this work is now completed.

# Compare your own project with existing or historical efforts.

The only other major proven VLSI Toolchain that is Libre Licensed and
has created successful ASICs is Magic, selected as part of the OpenROAD
toolchain.  The entire OpenROAD toolchain is based on tcl/tk, a late 1980s
scripting language technology.  LIP6 VLSI tools are written in c++ and python,
which are modern much better well-known programming languages. With python
being so well-known and prevalent it is much easier to operate and
coriolis2
for the development of complex reproducible ASIC layouts.

## What are significant technical challenges you expect to solve during the project, if any?

The size of databases for VLSI ASIC Layout are extremely large, and a huge
amount of computing power is needed, in one single machine.  In addition
a huge amount of specialist knowledge of VLSI and silicon is needed,
completely separately from actual Software Engineering skills. These
three factors combine to really tax the development of VLSI tools.

## Describe the ecosystem of the project, and how you will engage with relevant actors and promote the outcomes?

The entire source code is developed and available immediately, through LIP6
online resources including gitlab instance, mailing list, and website.
Sorbonne University and LIP6 both have twitter accounts, and the developers
write Academic papers and present at conferences.  In addition, they work
with the Libre-SOC Team to promote milestones and developments.

# Extra info to be submitted
