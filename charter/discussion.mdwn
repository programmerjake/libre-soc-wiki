# Discussion and commentary on Libre-SOC Member Agreement

# The Code of Honour

It's called a Code of "Honour", not a Code of "Conduct", for a reason.
A Code of "Honour" is a positive and clear statement.  Everyone knows
the difference between "good" and "bad".  Codes of "Conduct" on the
other hand have nothing to do with honour, and by the time the reader
has finished going through a horrific list of "proscribed behaviours",
what are the chances that they will actually genuinely feel that the
project is *actually* safe and welcoming?

Codes of "Conduct" are based on the assumption of guilt and a
predisposition of participants to exclusionary, disruptive and
unwelcoming behavior.  It assumes - in advance and up front -
that they are incapable of knowing the difference between right and
wrong, and patronises them with a horrifically toxic - and by
definition inadequate and incomplete - "proscribed list".

A Code of *Honour* inherently empowers participants with the
responsibility to know (or learn) and act upon the difference
between right and wrong, good and bad.  That alone says "we
trust you, empower you, and require you, to act responsibly",
for the benefit of all, including yourself, as part of this
Organisation.

# The Systemic Laws of Organisations.

The Systemic Laws are explained below.

## Everyone belongs

Every contributor and their contributions and achievements are recognised.
This further encourages people to contribute; they feel welcome, and their
efforts valued.

<img src="https://assets.amuniversal.com/4fb42f906d5101301d7a001dd8b71c47" width="400" />

## Reality is acknowledged and accepted

Denial of reality is the quickest way to kill the effectiveness of an
organisation.  Acceptance and acknowledgement of the facts, without
judgement, subsequently allows analysis to take place so that corrections
can be applied.

To reach a goal, it is necessary to have four things: (1) a model (2)
observations of reality (3) a comparative analysis system and
(4) a corrective feedback loop.  Whilst (1, 3 and 4) are sufficiently
obvious and objective that nobody really thinks much about them, when
things get hard it is often challenging for people to objectively face
reality, particularly if other Systemic Laws are being violated as well.

<img src="https://assets.amuniversal.com/6ab84f80e4d101382714005056a9545d" width="400" />

## Everyone is respected and honoured, past and present

When someone leaves a project, particularly under less than ideal circumstances,
it is still vitally important to value and respect both them *and* their
contributions.
Even when things are difficult, a person can teach you valuable lessons,
by example of how you *don't* want things to continue in the future.

## Role, Seniority and Expertise are all respected.

This can be very challenging, particularly when someone with more expertise
meets someone whose length of service is greater.

<img src="https://assets.amuniversal.com/c1cd41e09f8c012f2fe600163e41dd5b" width="400" />

## We accept the responsibility of our position

If we choose a position of responsibility, we must actually acknowledge and
accept the responsibility of that role!  People will be relying on us.

<img src="https://assets.amuniversal.com/de754040f11401382b97005056a9545d" width="400" />

## Everyone is rewarded equitably for their contributions

In a "Libre" context this is often extremely hard to do, as the normal
rules of profit-maximising business (do not provide goods or services
until payment has been received) do not apply: our "product" - the
source code - is made available at zero monetary cost.  So it is down
to us to ensure that part of our time is spent making sure that everyone
*is* actually rewarded, whether through contracts, sponsorship, donations,
crowd-funding and profit-sharing in the same, and so on.

## Everyone is responsible, credited, and accountable (for the "good" *and* the "bad")

When we do something well, it is vital that we (alone) own and hold the
credit for that achievement (nobody else takes the credit; we *accept*
the credit).  When we screw up, it is just as equally vital that we take
responsibility for cleaning up our mess, and that nobody else is blamed
*or think they own it*, or tries to take the task away from us!

In this way, two vitally important things happen.  Firstly: we can rely
on each other, as we trust that the tasks that others chose will be
completed (even if they mess up a few times).  Secondly: in our chosen
opportunity to grow and learn, we know and trust that nobody will take
that away from us, and, further, that our achievements and the credit
will be ours.

<img src="https://assets.amuniversal.com/a19b8990f08a01382b5a005056a9545d" width="400" />

# Decision-making and new contributors

This section has two aspects.  The first is that everything but unanimous
decision-making is disempowering and de-motivating (harmful).  Majority
rule (mob rule) is easily demonstrated to be so: anyone *not* in the
majority quickly gives up in resignation, even if their contribution is
critically important (and in the political arena, "Minority Representative
Groups" form as a direct result).  Unanimous decision-making requires
that the issue be discussed until it is fully understood by *all* members
(or members recognise that they do not or cannot understand the issue,
and abstain).

The introduction of new contributors really requires specially spelling
out.  The last thing that is needed is for a new contributor to introduce
changes that drain the time and resources of prior contributors to the
point where the project fails.  Unanimous decision-making ensures that
all members (who inherently have a longer term of service to the project
than any new member) have the right to veto proposals that disrupt the
project.  In a "mob rule" scenario, there is the potential for enough
new members to join simultaneously that they could easily completely
take over the project.  Unanimous decision making prevents this scenario.

It is also worthwhile noting on the subject of unanimous decision-making:
its effectiveness decreases as the number of contributors goes significantly
above around eight.  If that occurs, delegate!  Form sub-projects, agree
roles and responsibilities, and go for it.  Divide and conquer.
